{ 计算a对于p的逆元 }
read a;
read p;
exponent := p - 2;
result := 1;

repeat
    if (exponent % 2 = 1) [result := (result * a) % p];
    a := (a * a) % p;
    exponent := exponent / 2
until exponent <= 0;

write result;

{ 计算1~n的素数 }
read n;

for i := 2 to n do
    isPrime := 1;
    for j := i-1 downto 2 do
        if (i % j = 0) [
            isPrime := 0
        ]
    enddo;
    if (isPrime = 1) [
        write i
    ] else [
        write 0 - i
    ]
enddo;

{ 测试嵌套if }
if (a = b) [
    if (a = c) [
        write 1
    ] else [ 
        if (a = d) [
            write 2
        ];
        write 3
    ]
] else [
    write 4
];

{ 浮点数正则表达式 }
regtwo ::= (a|b)?&d&d# & (p&d&d#)? & ((e|E)&(a|b)?&d&d#)?;

{ 测试复杂表达式 }
a += 1 + (2 and 5) * 3 - 4 / not 5 % 6 or 7^(8-1)^(9+10) 